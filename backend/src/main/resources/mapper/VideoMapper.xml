<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="upc.backend.mapper.VideoMapper">
    <resultMap id="BaseResultMap" type="upc.backend.entity.Video">
        <id column="VideoId" jdbcType="INTEGER" property="VideoId" />
        <result column="VideoName" jdbcType="VARCHAR" property="VideoName" />
        <result column="VideoTeacher" jdbcType="VARCHAR" property="VideoTeacher" />
        <result column="UploadTime" jdbcType="TIMESTAMP" property="UploadTime" />
        <result column="VideoIntro" jdbcType="VARCHAR" property="VideoIntro" />
        <result column="PageView" jdbcType="INTEGER" property="PageView" />
        <result column="Url" jdbcType="VARCHAR" property="Url" />
        <result column="Picture" jdbcType="VARCHAR" property="Picture" />
        <result column="UserId" jdbcType="INTEGER" property="UserId" />
        <result column="TeamId" jdbcType="INTEGER" property="TeamId" />
<!--        <result column="imageUrl" jdbcType="LONGTEXT" property="imageUrl" />-->
    </resultMap>
    <sql id="Base_Column_List">
        VideoId,VideoName,VideoTeacher,UploadTime, VideoIntro,PageView,Url,Picture,UserId,TeamId
    </sql>
    <select id="selectByVideoId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from video
        where VideoId = #{VideoId,jdbcType=INTEGER}
    </select>

    <select id="getNumOfTotalVideos" parameterType="Map" resultType="int">
        select count(*) from video
        <where>
            <if test="searchQuery != null and searchQuery != ''">
                <choose>
                    <when test="category == 'VideoName'">
                        VideoName like CONCAT('%', #{searchQuery}, '%')
                    </when>
                    <when test="category == 'VideoTeacher'">
                        VideoTeacher like CONCAT('%', #{searchQuery}, '%')
                    </when>
                </choose>
            </if>
        </where>
    </select>

    <select id="findAllVideoList" parameterType="Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from video
        <where>
            <if test="searchQuery != null and searchQuery != ''">
                <choose>
                    <when test="category == 'VideoName'">
                        VideoName like CONCAT('%', #{searchQuery}, '%')
                    </when>
                    <when test="category == 'VideoTeacher'">
                        VideoTeacher like CONCAT('%', #{searchQuery}, '%')
                    </when>
                </choose>
            </if>
        </where>
        <if test="start != null and limit != null">
            limit #{start}, #{limit}
        </if>
    </select>

    <update id="updateByPrimaryKeySelective" parameterType="upc.backend.entity.Video">
    update video
    <set>
        <if test="VideoName != null">
            VideoName = #{VideoName,jdbcType=VARCHAR},
        </if>
        <if test="VideoTeacher != null">
            VideoTeacher = #{VideoTeacher,jdbcType=VARCHAR},
        </if>
        <if test=" UploadTime != null">
            UploadTime = #{UploadTime,jdbcType=TIMESTAMP},
        </if>
        <if test="VideoIntro != null">
            VideoIntro = #{VideoIntro,jdbcType=VARCHAR},
        </if>
        <if test="PageView != null">
            PageView = #{PageView,jdbcType=INTEGER},
        </if>
        <if test="Url != null">
            Url = #{Url,jdbcType=VARCHAR},
        </if>
        <if test="Picture != null">
            Picture = #{Picture,jdbcType=VARCHAR},
        </if>
        <if test="UserId != null">
            UserId = #{UserId,jdbcType=VARCHAR},
        </if>
        <if test="TeamId != null">
            TeamId = #{TeamId,jdbcType=INTEGER},
        </if>
        <if test="TeamId == null">
            TeamId = null,
        </if>
    </set>
    where VideoId = #{VideoId,jdbcType=INTEGER}
</update>


    <select id="selectByVideoName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from video
        where VideoName = #{VideoName,jdbcType=VARCHAR}
    </select>

    <select id="selectByUploadTime" resultMap="BaseResultMap">
        select count(*) from video
        order by UploadTime desc
    </select>
    <select id="selectByTeamIds" resultMap="BaseResultMap">
        SELECT
        video.VideoId,
        video.VideoName,
        video.VideoTeacher,
        video.UploadTime,
        video.VideoIntro,
        video.PageView,
        video.Picture,
        user.UserId AS userId,
        user.UserName AS userName,
        video.TeamId AS teamId
        FROM video
        JOIN user ON video.UserId = user.UserId
        WHERE
        teamId IN
        <foreach item="teamId" collection="teamIdsArray" open="(" separator="," close=")">
            #{teamId, jdbcType=INTEGER}
        </foreach>
        OR teamId IS NULL
        <if test="pageUtil.start != null and pageUtil.limit != null">
            LIMIT #{pageUtil.start}, #{pageUtil.limit}
        </if>
    </select>
    <select id="getNumOfUserVideo" resultType="int">
        SELECT COUNT(*)
        FROM video
        WHERE
        TeamId IN
        <foreach item="teamId" collection="teamIdsArray" open="(" separator="," close=")">
            #{teamId, jdbcType=INTEGER}
        </foreach>
        OR TeamId IS NULL
    </select>

    <select id="getNumOfTotalVideo" parameterType="Map" resultType="int">
        select count(*) from video
    </select>
    <select id="getNumOfTotalVideoByUserId" parameterType="Map" resultType="int">
        select count(*) from video
        where UserId = #{userid}
        <if test="searchQuery != null and searchQuery != ''">
            and VideoName like concat('%', #{searchQuery}, '%')
        </if>
    </select>
    <select id="findAllVideoListByUserId" parameterType="Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from video
        where UserId = #{userid}
        <if test="start!=null and limit!=null">
            limit #{start},#{limit}
        </if>
    </select>
    <select id="findAllVideoListByUserIdOrderByTime" parameterType="Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from video
        where UserId = #{userid}
        <if test="searchQuery != null and searchQuery != ''">
            and VideoName like concat('%', #{searchQuery}, '%')
        </if>
        order by UploadTime desc
        <if test="start != null and limit != null">
            limit #{start}, #{limit}
        </if>
    </select>
    <select id="findAllVideoListByUserIdOrderByTeamId" parameterType="Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from video
        where UserId = #{userid}
        <if test="searchQuery != null and searchQuery != ''">
            and VideoName like concat('%', #{searchQuery}, '%')
        </if>
        order by TeamId
        <if test="start!=null and limit!=null">
            limit #{start},#{limit}
        </if>
    </select>

    <insert id="insert" parameterType="upc.backend.entity.Video">
        insert into video (VideoId, VideoName, UploadTime, VideoTeacher, VideoIntro, PageView, Picture, UserId, TeamId, Url)
        values (#{VideoId,jdbcType=INTEGER}, #{VideoName,jdbcType=VARCHAR}, #{UploadTime,jdbcType=TIMESTAMP},
                #{VideoTeacher,jdbcType=VARCHAR}, #{VideoIntro,jdbcType=VARCHAR},
                #{PageView,jdbcType=INTEGER}, #{Picture,jdbcType=VARCHAR}, #{UserId,jdbcType=INTEGER}, #{TeamId,jdbcType=INTEGER}, #{Url,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="upc.backend.entity.Video">
        insert into video
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="VideoId != null">
                VideoId,
            </if>
            <if test="VideoName != null">
                VideoName,
            </if>
            <if test="UploadTime != null">
                UploadTime,
            </if>
            <if test="VideoTeacher != null">
                VideoTeacher,
            </if>
            <if test="VideoIntro != null">
                VideoIntro,
            </if>
            <if test="PageView != null">
                PageView,
            </if>
            <if test="Picture != null">
                Picture,
            </if>
            <if test="UserId != null">
                UserId,
            </if>
            <if test="TeamId != null">
                TeamId,
            </if>
            <if test="Url != null">
                Url,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="VideoId != null">
                #{VideoId, jdbcType=INTEGER},
            </if>
            <if test="VideoName != null">
                #{VideoName, jdbcType=VARCHAR},
            </if>
            <if test="UploadTime != null">
                #{UploadTime, jdbcType=TIMESTAMP},
            </if>
            <if test="VideoTeacher != null">
                #{VideoTeacher, jdbcType=VARCHAR},
            </if>
            <if test="VideoIntro != null">
                #{VideoIntro, jdbcType=VARCHAR},
            </if>
            <if test="PageView != null">
                #{PageView, jdbcType=INTEGER},
            </if>
            <if test="Picture != null">
                #{Picture, jdbcType=VARCHAR},
            </if>
            <if test="UserId != null">
                #{UserId, jdbcType=INTEGER},
            </if>
            <if test="TeamId != null">
                #{TeamId, jdbcType=INTEGER},
            </if>
            <if test="Url != null">
                #{Url, jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKey" parameterType="upc.backend.entity.Video">
        update video
        set VideoName = #{VideoName,jdbcType=VARCHAR},
            UploadTime = #{UploadTime,jdbcType=TIMESTAMP},
            VideoTeacher = #{VideoTeacher,jdbcType=VARCHAR},
            VideoIntro = #{VideoIntro,jdbcType=VARCHAR},
            PageView = #{PageView,jdbcType=INTEGER},
            Picture = #{Picture,jdbcType=VARCHAR},
            UserId = #{UserId,jdbcType=INTEGER},
            TeamId = #{UserId,jdbcType=INTEGER},
            Url = #{Url,jdbcType=VARCHAR}
        where VideoId = #{VideoId,jdbcType=INTEGER}
    </update>
    <delete id="deleteBatch" parameterType="java.lang.Integer">
        delete from video
        where VideoId in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>