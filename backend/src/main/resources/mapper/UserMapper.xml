<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="upc.backend.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="upc.backend.entity.User">
        <id column="UserId" jdbcType="INTEGER" property="UserId" />
        <result column="UserName" jdbcType="VARCHAR" property="UserName" />
        <result column="UserPassword" jdbcType="VARCHAR" property="UserPassword" />
        <result column="NickName" jdbcType="VARCHAR" property="NickName" />
        <result column="UserLocked" jdbcType="TINYINT" property="UserLocked" />
        <result column="user_role" jdbcType="VARCHAR" property="user_role" />
        <result column="UserEmail" jdbcType="VARCHAR" property="UserEmail" />
        <result column="UserCollege" jdbcType="VARCHAR" property="UserCollege" />
        <result column="RegisterTime" jdbcType="TIMESTAMP" property="RegisterTime" />
    </resultMap>


    <sql id="Base_Column_List">
        UserId, UserName, UserPassword, NickName, UserLocked, user_role, UserEmail, UserCollege, RegisterTime
    </sql>

    <select id="login" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        where UserId = #{UserId,jdbcType=INTEGER} AND UserPassword=#{UserPassword,jdbcType=VARCHAR} AND UserLocked = 0
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        where UserId = #{UserId,jdbcType=INTEGER}
    </select>

    <select id="findAllUserList" parameterType="Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        order by RegisterTime desc
        <if test="start!=null and limit!=null">
            limit #{start},#{limit}
        </if>
    </select>

    <select id="getNumOfTotalUsers" parameterType="Map" resultType="int">
        select count(*) from user
    </select>

    <insert id="insert" parameterType="upc.backend.entity.User">
        insert into user (UserId, UserName, UserPassword, NickName, UserLocked, user_role, UserEmail, UserCollege, RegisterTime)
        values (#{UserId,jdbcType=INTEGER}, #{UserName,jdbcType=VARCHAR}, #{UserPassword,jdbcType=VARCHAR},
                #{NickName,jdbcType=VARCHAR}, #{UserLocked,jdbcType=TINYINT}, #{user_role,jdbcType=VARCHAR}, #{UserEmail,jdbcType=VARCHAR}, #{UserCollege,jdbcType=VARCHAR}, #{RegisterTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="upc.backend.entity.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="UserId != null">
                UserId,
            </if>
            <if test="UserName != null">
                UserName,
            </if>
            <if test="UserPassword != null">
                UserPassword,
            </if>
            <if test="NickName != null">
                NickName,
            </if>
            <if test="UserLocked != null">
                UserLocked,
            </if>
            <if test="user_role != null">
                user_role,
            </if>
            <if test="UserEmail != null">
                UserEmail,
            </if>
            <if test="UserCollege != null">
                UserCollege,
            </if>
            <if test="RegisterTime != null">
                RegisterTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="UserId!= null">
                #{UserId,jdbcType=INTEGER},
            </if>
            <if test="UserName != null">
                #{UserName,jdbcType=VARCHAR},
            </if>
            <if test="UserPassword != null">
                #{UserPassword,jdbcType=VARCHAR},
            </if>
            <if test="NickName != null">
                #{NickName,jdbcType=VARCHAR},
            </if>
            <if test="UserLocked != null">
                #{UserLocked,jdbcType=TINYINT},
            </if>
            <if test="user_role != null">
                #{user_role,jdbcType=VARCHAR},
            </if>
            <if test="UserEmail != null">
                #{UserEmail,jdbcType=VARCHAR},
            </if>
            <if test="UserCollege != null">
                #{UserCollege,jdbcType=VARCHAR},
            </if>
            <if test="RegisterTime != null">
                #{RegisterTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="upc.backend.entity.User">
        update user
        <set>
            <if test="UserName != null">
                UserName = #{UserName,jdbcType=VARCHAR},
            </if>
            <if test="UserPassword != null">
                UserPassword = #{UserPassword,jdbcType=VARCHAR},
            </if>
            <if test="NickName != null">
                NickName = #{NickName,jdbcType=VARCHAR},
            </if>
            <if test="UserLocked != null">
                UserLocked = #{UserLocked,jdbcType=TINYINT},
            </if>
            <if test="user_role != null">
                user_role = #{user_role,jdbcType=VARCHAR},
            </if>
            <if test="UserEmail != null">
                UserEmail = #{UserEmail,jdbcType=VARCHAR},
            </if>
            <if test="UserCollege != null">
                UserCollege = #{UserCollege,jdbcType=VARCHAR},
            </if>
            <if test="RegisterTime != null">
                RegisterTime = #{RegisterTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where UserId = #{UserId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="upc.backend.entity.User">
        update user
        set UserName = #{UserName,jdbcType=VARCHAR},
            UserPassword = #{UserPassword,jdbcType=VARCHAR},
            NickName = #{NickName,jdbcType=VARCHAR},
            UserLocked = #{UserLocked,jdbcType=TINYINT},
            user_role = #{user_role,jdbcType=VARCHAR},
            UserEmail = #{UserEmail,jdbcType=VARCHAR},
            UserCollege = #{UserCollege,jdbcType=VARCHAR},
            RegisterTime = #{RegisterTime,jdbcType=TIMESTAMP}
        where UserId = #{UserId,jdbcType=INTEGER}
    </update>
    <update id="resetPassword" parameterType="upc.backend.entity.User">
        update user
        set UserPassword = #{UserPassword,jdbcType=VARCHAR}
        where UserId = #{UserId,jdbcType=INTEGER}

    </update>
    <update id="lockUserBatch">
        update user
        set UserLocked=#{lockStatus} where UserId in
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <delete id="deleteBatch" parameterType="java.lang.Integer">
        delete from user
        where UserId in
        <foreach item="UserId" collection="array" open="(" separator="," close=")">
            #{UserId}
        </foreach>
    </delete>
</mapper>