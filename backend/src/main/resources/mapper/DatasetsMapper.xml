<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="upc.backend.mapper.DatasetsMapper">
    <resultMap id="BaseResultMap" type="upc.backend.entity.Datasets">
        <id column="DataId" jdbcType="INTEGER" property="DataId" />
        <result column="DataName" jdbcType="VARCHAR" property="DataName" />
        <result column="UploadTime" jdbcType="TIMESTAMP" property="UploadTime" />
        <result column="DataAbstract" jdbcType="VARCHAR" property="DataAbstract" />
        <result column="DataDetails" jdbcType="VARCHAR" property="DataDetails" />
        <result column="isPublic" jdbcType="INTEGER" property="isPublic" />
        <result column="DownloadTimes" jdbcType="INTEGER" property="DownloadTimes" />
        <result column="UserId" jdbcType="INTEGER" property="DownloadTimes" />
        <result column="TeamId" jdbcType="INTEGER" property="TeamId" />
        <result column="Url" jdbcType="VARCHAR" property="Url" />


    </resultMap>
    <sql id="Base_Column_List">
        DataId, DataName, UploadTime, DataAbstract, DataDetails, isPublic, DownloadTimes, UserId, TeamId, Url
    </sql>

    <select id="selectByDataId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from datasets
        where DataId = #{DataId,jdbcType=INTEGER}
    </select>

    <select id="selectByDataName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from datasets
        where DataName = #{DataName,jdbcType=VARCHAR}
    </select>

    <select id="selectByUploadTime" resultMap="BaseResultMap">
        select count(*) from datasets
        order by UploadTime desc
    </select>

    <select id="getNumOfTotalDatasets" parameterType="Map" resultType="int">
        select count(*) from datasets
    </select>
    <select id="findAllDatasetsList" parameterType="Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from datasets
        <if test="start!=null and limit!=null">
            limit #{start},#{limit}
        </if>
    </select>

    <insert id="insert" parameterType="upc.backend.entity.Datasets">
        insert into datasets (DataId, DataName, UploadTime, DataAbstract, DataDetails, isPublic, DownloadTimes, UserId, TeamId, Url)
        values (#{DataId,jdbcType=INTEGER}, #{DataName,jdbcType=VARCHAR}, #{UploadTime,jdbcType=TIMESTAMP},
                #{DataAbstract,jdbcType=VARCHAR}, #{DataDetails,jdbcType=VARCHAR}, #{isPublic,jdbcType=INTEGER},
                #{DownloadTimes,jdbcType=INTEGER}, #{UserId,jdbcType=INTEGER}, #{TeamId,jdbcType=INTEGER}, #{Url,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="upc.backend.entity.Datasets">
        insert into datasets
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="DataId != null">
                DataId,
            </if>
            <if test="DataName != null">
                DataName,
            </if>
            <if test="UploadTime != null">
                UploadTime,
            </if>
            <if test="DataAbstract != null">
                DataAbstract,
            </if>
            <if test="DataDetails != null">
                DataDetails,
            </if>
            <if test="isPublic != null">
                isPublic,
            </if>
            <if test="DownloadTimes != null">
                DownloadTimes,
            </if>
            <if test="UserId != null">
                UserId,
            </if>
            <if test="TeamId != null">
                TeamId,
            </if>
            <if test="Url != null">
                Url,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="DataId != null">
                #{DataId, jdbcType=INTEGER},
            </if>
            <if test="DataName != null">
                #{DataName, jdbcType=VARCHAR},
            </if>
            <if test="UploadTime != null">
                #{UploadTime, jdbcType=TIMESTAMP},
            </if>
            <if test="DataAbstract != null">
                #{DataAbstract, jdbcType=VARCHAR},
            </if>
            <if test="DataDetails != null">
                #{DataDetails, jdbcType=VARCHAR},
            </if>
            <if test="isPublic != null">
                #{isPublic, jdbcType=INTEGER},
            </if>
            <if test="DownloadTimes != null">
                #{DownloadTimes, jdbcType=INTEGER},
            </if>
            <if test="UserId != null">
                #{UserId, jdbcType=INTEGER},
            </if>
            <if test="TeamId != null">
                #{TeamId, jdbcType=INTEGER},
            </if>
            <if test="Url != null">
                #{Url, jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="upc.backend.entity.Datasets">
        update datasets
        <set>
            <if test="DataName != null">
                DataName = #{DataName,jdbcType=VARCHAR},
            </if>
            <if test="UploadTime != null">
                UploadTime = #{UploadTime,jdbcType=TIMESTAMP},
            </if>
            <if test="DataAbstract != null">
                DataAbstract = #{DataAbstract,jdbcType=VARCHAR},
            </if>
            <if test="DataDetails != null">
                DataDetails = #{DataDetails,jdbcType=VARCHAR},
            </if>
            <if test="isPublic != null">
                isPublic = #{isPublic,jdbcType=INTEGER},
            </if>
            <if test="DownloadTimes != null">
                DownloadTimes = #{DownloadTimes,jdbcType=INTEGER},
            </if>
            <if test="UserId != null">
                UserId = #{UserId,jdbcType=INTEGER},
            </if>
            <if test="TeamId != null">
                TeamId = #{TeamId,jdbcType=INTEGER},
            </if>
            <if test="Url != null">
                Url = #{Url,jdbcType=VARCHAR},
            </if>
        </set>
        where DataId = #{DataId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="upc.backend.entity.Datasets">
        update datasets
        set DataName = #{DataName,jdbcType=VARCHAR},
            UploadTime = #{UploadTime,jdbcType=TIMESTAMP},
            DataAbstract = #{DataAbstract,jdbcType=VARCHAR},
            DataDetails = #{DataDetails,jdbcType=VARCHAR},
            isPublic = #{isPublic,jdbcType=INTEGER},
            DownloadTimes = #{DownloadTimes,jdbcType=INTEGER},
            UserId = #{UserId,jdbcType=INTEGER},
            TeamId = #{UserId,jdbcType=INTEGER},
            Url = #{Url,jdbcType=VARCHAR}
        where DataId = #{DataId,jdbcType=INTEGER}
    </update>
    <delete id="deleteBatch" parameterType="java.lang.Integer">
        delete from datasets
        where DataId in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>