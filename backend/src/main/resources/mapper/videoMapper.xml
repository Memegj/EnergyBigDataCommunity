<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="upc.backend.mapper.VideoMapper">
    <resultMap id="BaseResultMap" type="upc.backend.entity.video">
        <id column="VideoId" jdbcType="INTEGER" property="VideoId" />
        <result column="VideoName" jdbcType="VARCHAR" property="VideoName" />
        <result column="VideoTeacher" jdbcType="VARCHAR" property="VideoTeacher" />
        <result column="UploadTime" jdbcType="TIMESTAMP" property="UploadTime" />
        <result column="VideoIntro" jdbcType="VARCHAR" property="VideoIntro" />
        <result column="isPublic" jdbcType="INTEGER" property="isPublic" />
        <result column="PageView" jdbcType="INTEGER" property="PageView" />
        <result column="Url" jdbcType="VARCHAR" property="Url" />
        <result column="UserId" jdbcType="INTEGER" property="UserId" />
<!--        <result column="imageUrl" jdbcType="LONGTEXT" property="imageUrl" />-->
    </resultMap>
    <sql id="Base_Column_List">
        VideoId,VideoName,VideoTeacher,UploadTime, VideoIntro,isPublic,PageView,Url,UserId
    </sql>
    <select id="getVideoByID" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from video
        where VideoId = #{VideoId,jdbcType=INTEGER}
    </select>

    <select id="getNumOfTotalVideos" parameterType="Map" resultType="int">
        select count(*) from video
    </select>

    <select id="findAllVideoList" parameterType="Map" resultMap="BaseResultMap">
        select
        VideoId,VideoName,VideoTeacher,UploadTime, VideoIntro,isPublic,PageView,Url,
        video.UserId,
        user.UserName
        from video
        JOIN
        user ON user.UserId=video.UserId
         where video.UserId=#{userId,jdbcType=INTEGER}
        <if test="start!=null and limit!=null">
            limit #{start},#{limit}
        </if>
    </select>
    <delete id="deleteBatchCollect" parameterType="java.lang.Integer">
        <!-- 先删除外键表中的引用记录 -->
        delete from collect
        where VideoId in
        <foreach item="VideoId" collection="array" open="(" separator="," close=")">
            #{VideoId}
        </foreach>;
    </delete>
    <delete id="deleteBatchVideo" parameterType="java.lang.Integer">
        <!-- 然后删除主表中的记录 -->
        delete from video
        where VideoId in
        <foreach item="VideoId" collection="array" open="(" separator="," close=")">
            #{VideoId}
        </foreach>
    </delete>
    <update id="updateByPrimaryKeySelective" parameterType="upc.backend.entity.video">
    update video
    <set>
        <if test="VideoName != null">
            VideoName = #{VideoName,jdbcType=VARCHAR},
        </if>
        <if test="VideoTeacher != null">
            VideoTeacher = #{VideoTeacher,jdbcType=VARCHAR},
        </if>
        <if test=" UploadTime != null">
            UploadTime = #{UploadTime,jdbcType=TIMESTAMP},
        </if>
        <if test="VideoIntro != null">
            VideoIntro = #{VideoIntro,jdbcType=VARCHAR},
        </if>
        <if test="isPublic!= null">
            isPublic = #{isPublic,jdbcType=INTEGER},
        </if>
        <if test="PageView != null">
            PageView = #{PageView,jdbcType=INTEGER},
        </if>
        <if test="Url != null">
            Url = #{Url,jdbcType=VARCHAR},
        </if>
        <if test="UserId != null">
            UserId = #{UserId,jdbcType=VARCHAR},
        </if>
<!--        <if test="imageUrl != null">-->
<!--            imageUrl  = #{imageUrl ,jdbcType=LONGTEXT},-->
<!--        </if>-->
    </set>
    where VideoId = #{VideoId,jdbcType=INTEGER}
</update>

</mapper>